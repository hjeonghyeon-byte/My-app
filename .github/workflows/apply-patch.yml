name: apply-and-pr

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch'
        required: true
        default: main
      pr_title:
        description: 'PR title'
        required: true
        default: Auto patch from n8n
      patch_b64:
        description: 'Base64 diff'
        required: false
      head_branch:
        description: 'Feature branch name'
        required: false
        default: ''

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}

      - run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - id: br
        run: |
          BR="${{ inputs.head_branch }}"
          if [ -z "$BR" ]; then BR="auto/patch-${{ github.run_id }}"; fi
          echo "BRANCH=$BR" >> "$GITHUB_ENV"

      - if: ${{ inputs.patch_b64 != '' }}
        env:
          PATCH_B64: ${{ inputs.patch_b64 }}
        run: |
          python3 - <<'PY'
import os, base64
open('patch.diff','wb').write(base64.b64decode(os.environ['PATCH_B64']))
PY
          git apply -p0 --whitespace=nowarn patch.diff || git apply -p1 --whitespace=nowarn patch.diff

      - run: |
          printf 'hello from GitHub Actions at %s\n' "$(date -u +%FT%TZ)" > hello.txt

      - run: |
          if ! git diff --staged --quiet || ! git diff --quiet; then
            git add -A
            git commit -m "${{ inputs.pr_title }}"
          fi

      - run: git push -u origin "$BRANCH"

      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          BASE: ${{ inputs.base_branch }}
          HEAD: ${{ github.repository_owner }}:"$BRANCH"
          TITLE: ${{ inputs.pr_title }}
        run: |
          set -e
          P=$(jq -n --arg t "$TITLE" --arg h "$HEAD" --arg b "$BASE" '{title:$t,head:$h,base:$b}')
          R=$(curl -sS -w '\n%{http_code}' \
               -H "Authorization: Bearer $GH_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               -d "$P" "https://api.github.com/repos/$OWNER/$REPO/pulls")
          B=$(echo "$R" | head -n -1)
          C=$(echo "$R" | tail -n1)
          if [ "$C" = "201" ] || [ "$C" = "200" ]; then
            echo "$B" | jq -r '.html_url'
          else
            if echo "$B" | jq -r '.errors[0].message // empty' | grep -qi 'already exists'; then
              curl -sS -H "Authorization: Bearer $GH_TOKEN" \
                   -H "Accept: application/vnd.github+json" \
                   "https://api.github.com/repos/$OWNER/$REPO/pulls?head=$(printf %s "$HEAD" | sed 's/:/%3A/')" \
              | jq -r '.[0].html_url'
            else
              echo "$B"; exit 1
            fi
          fi

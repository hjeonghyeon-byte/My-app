name: apply-patch

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: "Base branch"
        required: true
        default: "main"
      pr_title:
        description: "PR title"
        required: true
        default: "Auto patch from n8n"
      patch_b64:
        description: "Base64-encoded patch (optional)"
        required: false
        default: ""
      required_files:
        description: "JSON array of required files to exist after apply (optional)"
        required: false
        default: "[]"
      must_create:
        description: "JSON array of files that must be newly created (optional)"
        required: false
        default: "[]"

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}
          fetch-depth: 0

      - name: Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create work branch
        id: mk
        run: |
          set -euo pipefail
          BR="auto/patch-${{ github.run_id }}"
          git switch -c "$BR"
          echo "branch=$BR" >> "$GITHUB_OUTPUT"

      - name: Apply patch (if provided)
        if: ${{ inputs.patch_b64 != '' }}
        env:
          PATCH_B64: ${{ inputs.patch_b64 }}
          REQUIRED_FILES: ${{ inputs.required_files }}
          MUST_CREATE: ${{ inputs.must_create }}
        shell: bash
        run: |
          set -eo pipefail
          printf '%s' "$PATCH_B64" | tr -d '\r\n' | base64 -d > patch.diff 2> decode.err || true
          sed -i 's/\r$//' patch.diff || true
          DID_APPLY=false
          for P in 0 1; do
            if git apply --check --whitespace=nowarn -p${P} patch.diff 2> apply_check.err; then
              if git apply --index --whitespace=nowarn -p${P} patch.diff 2> apply.err; then
                DID_APPLY=true; break
              fi
            fi
          done
          if [ "$DID_APPLY" != "true" ] && command -v patch >/dev/null 2>&1; then
            for P in 0 1; do
              if patch -p${P} -f -s < patch.diff; then
                git add -A; DID_APPLY=true; break
              fi
            done
          fi
          if [ "$DID_APPLY" = "true" ] && [ -s patch.diff ] && [ -n "${REQUIRED_FILES:-}" ] && [ "${REQUIRED_FILES}" != "[]" ]; then
            python3 - <<'EOF'
          import json, os, sys
          rf = json.loads(os.environ.get("REQUIRED_FILES","[]"))
          missing = [f for f in rf if f and not os.path.isfile(f)]
          if missing:
            print("::error ::Required file(s) missing after apply:", ", ".join(missing))
            sys.exit(1)
          EOF
          fi

      - name: Ensure at least one change
        run: |
          {
            echo "run_id=${{ github.run_id }}"
            echo "run_url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          } >> .n8n-diagnose.txt
          git add .n8n-diagnose.txt

      - name: Commit if changes exist
        id: c
        run: |
          set -euo pipefail
          if ! git diff --cached --quiet; then
            git commit -m "${{ inputs.pr_title }}"
            echo "did=true" >> "$GITHUB_OUTPUT"
          else
            echo "did=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Push
        if: steps.c.outputs.did == 'true'
        run: |
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -u origin "${{ steps.mk.outputs.branch }}"

      - name: Create Pull Request
        if: steps.c.outputs.did == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --head "${{ steps.mk.outputs.branch }}" --base "${{ inputs.base_branch }}" --title "${{ inputs.pr_title }}" --body "Automated patch via workflow run ${{ github.run_id }}"

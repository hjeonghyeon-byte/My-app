name: apply-and-pr

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch'
        required: true
        default: 'main'
      pr_title:
        description: 'PR title'
        required: true
        default: 'Auto patch from n8n'
      patch_b64:
        description: 'Base64-encoded patch (optional)'
        required: false
        default: ''

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}
          fetch-depth: 0

      - name: Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create working branch
        id: mkbranch
        shell: bash
        run: |
          set -euo pipefail
          BR="auto/patch-${{ github.run_id }}"
          git switch -c "$BR"
          echo "branch=$BR" >> "$GITHUB_OUTPUT"

      - name: Apply patch if provided
        id: apply
        shell: bash
        run: |
          set -euo pipefail
          DID_APPLY="false"
          if [ -n "${{ inputs.patch_b64 }}" ]; then
            printf "%s" "${{ inputs.patch_b64 }}" | tr -d '\r\n' | base64 -d > patch.diff
            echo "[preview]"; head -n 50 patch.diff || true
            if git apply --check --whitespace=nowarn patch.diff; then
              git apply --index --whitespace=nowarn patch.diff
              DID_APPLY="true"
            else
              if git apply --check --whitespace=nowarn -p1 patch.diff; then
                git apply --index --whitespace=nowarn -p1 patch.diff
                DID_APPLY="true"
              else
                echo "::error::git apply failed"
                exit 1
              fi
            fi
          fi
          echo "did_apply=$DID_APPLY" >> "$GITHUB_OUTPUT"

      - name: Commit if changes exist
        id: commit
        shell: bash
        run: |
          set -euo pipefail
          if ! git diff --cached --quiet; then
            git commit -m "${{ inputs.pr_title }}"
            echo "did_commit=true" >> "$GITHUB_OUTPUT"
          else
            echo "No staged changes; skip commit."
            echo "did_commit=false" >> "$GITHUB_OUTPUT"

      - name: Push branch
        shell: bash
        run: |
          set -euo pipefail
          git push -u origin "${{ steps.mkbranch.outputs.branch }}"

      - name: Create Pull Request
        if: steps.commit.outputs.did_commit == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          gh pr create \
            --head "${{ steps.mkbranch.outputs.branch }}" \
            --base "${{ inputs.base_branch }}" \
            --title "${{ inputs.pr_title }}" \
            --body "Automated patch via workflow run ${{ github.run_id }}"

name: Apply Patch and Open PR (n8n)

on:
  workflow_dispatch:
    inputs:
      patch_b64:
        description: Base64-encoded unified diff
        required: true
      base_branch:
        description: Base branch to create PR against
        required: true
        default: main
      pr_title:
        description: Title of the PR
        required: true
        default: Auto patch from n8n

permissions:
  contents: write
  pull-requests: write
  issues: write 
jobs:
  apply-patch:
    runs-on: ubuntu-latest
    env:
      BASE_BRANCH: ${{ github.event.inputs.base_branch }}
      PATCH_B64: ${{ github.event.inputs.patch_b64 }}
      PR_TITLE: ${{ github.event.inputs.pr_title }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          fetch-depth: 0

      - name: Install utils
        run: |
          sudo apt-get update -y
          sudo apt-get install -y dos2unix patch

      - name: Prepare work branch
        id: prep
        run: |
          BR="auto/patch-${{ github.run_id }}"
          echo "BRANCH_NAME=$BR" >> $GITHUB_OUTPUT
          git checkout -b "$BR"

      - name: Decode base64 → patch.diff (LF normalize)
        id: decode
        shell: bash
        run: |
          # 1) 공백/개행 정리
          CLEAN=$(printf "%s" "${PATCH_B64}" | tr -d '\r\n\t ')
          # 2) base64 디코드
          echo "$CLEAN" | base64 -d > patch.diff || {
            echo "Base64 decode failed" >&2
            exit 1
          }
          dos2unix patch.diff || true
          echo "==== patch.diff head ===="
          head -n 50 patch.diff || true

      - name: Try git apply (diff --git style)
        id: git_apply
        continue-on-error: true
        run: |
          set -e
          # git apply는 diff --git 포맷에 적합
          git apply --whitespace=nowarn --reject --index patch.diff
        shell: bash

      - name: Fallback to patch -p1 / -p0
        if: steps.git_apply.outcome == 'failure'
        continue-on-error: true
        run: |
          set -e
          if patch -p1 --forward < patch.diff; then
            echo "patch -p1 succeeded"
          elif patch -p0 --forward < patch.diff; then
            echo "patch -p0 succeeded"
          else
            echo "both patch attempts failed" >&2
            exit 1
          fi
          git add -A
          rm -f patch.diff   # patch.diff는 커밋되지 않게 제거


      - name: Diagnose if no changes or apply failed
        id: diagnose
        run: |
          set -e
          # 안전: 작업용 패치파일은 커밋 대상에서 제거
          rm -f patch.diff || true

          # 변경이 없으면 반드시 1개 변경을 만들어 PR이 생기도록 함
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected after applying patch."
            {
              echo "## n8n diagnose"
              echo "Time: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
              echo "Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              echo "Note: No diff vs base; forcing PR with diagnose file."
            } > .n8n-diagnose.txt
            git add .n8n-diagnose.txt
          fi



      - name: Commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -z "$(git status --porcelain)" ]; then
            echo "Nothing staged; no commit will be created."
          else
            git commit -m "${PR_TITLE}" || echo "Nothing to commit (already committed)."
          fi


      - name: Push branch
        run: |
          git push --set-upstream origin "$(git rev-parse --abbrev-ref HEAD)"

      - name: Create PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          title: ${{ env.PR_TITLE }}
          body: |
            Automated patch from n8n.
            - Base branch: `${{ env.BASE_BRANCH }}`
            - Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          branch: ${{ steps.prep.outputs.BRANCH_NAME }}
          base: ${{ env.BASE_BRANCH }}
          labels: |
            bot
            auto-patch
          draft: false

      - name: Echo PR info
        run: |
          echo "PR_NUMBER=${{ steps.cpr.outputs['pull-request-number'] }}"
          echo "PR_URL=${{ steps.cpr.outputs['pull-request-url'] }}"

      - name: Fail if PR not created
        if: ${{ steps.cpr.outputs['pull-request-number'] == '' }}
        run: |
          echo "No PR created (branch equals base)" 1>&2
          exit 1


      - name: Ensure at least one change (create diagnose if clean)
        id: ensure_change
        run: |
          set -e
          rm -f patch.diff || true

          if [ -z "$(git status --porcelain)" ]; then
            echo "Working tree clean → creating .n8n-diagnose.txt to force PR"
            {
              echo "## n8n diagnose"
              echo "Time: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
              echo "Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              echo "Base: ${{ env.BASE_BRANCH }}"
              echo "Note: No diff vs base; forcing PR with diagnose file."
            } > .n8n-diagnose.txt
            git add .n8n-diagnose.txt
            echo "made_change=true" >> $GITHUB_OUTPUT
          else
            echo "made_change=false" >> $GITHUB_OUTPUT
          fi

 